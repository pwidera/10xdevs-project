---
import Layout from "@/layouts/Layout.astro";
import { ResetPasswordForm } from "@/components/auth/ResetPasswordForm";
import { createSupabaseServerClient } from "@/db/supabase.server";

export const prerender = false;

// This page is for password reset via email link (recovery flow)
// It does NOT require the user to be logged in

// Handle the recovery token from URL
const url = new URL(Astro.request.url);
const code = url.searchParams.get("code");
const error_code = url.searchParams.get("error_code");
const error_description = url.searchParams.get("error_description");

let tokenError: string | null = null;

if (error_code) {
  tokenError = error_description || "Link resetowania hasła jest nieprawidłowy lub wygasł.";
} else if (code) {
  // Exchange the code for a session
  const supabase = createSupabaseServerClient({
    headers: Astro.request.headers,
    cookies: Astro.cookies,
  });

  const { error } = await supabase.auth.exchangeCodeForSession(code);

  if (error) {
    console.error("exchangeCodeForSession error:", error);
    tokenError = "Link resetowania hasła jest nieprawidłowy lub wygasł.";
  }
  // If successful, the session is now established via cookies
} else {
  tokenError = "Brak tokenu resetowania hasła. Użyj linku z emaila.";
}
---

<Layout title="Resetowanie hasła">
  <main class="container mx-auto px-4 py-10">
    {
      tokenError ? (
        <div class="max-w-md mx-auto">
          <div class="bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded">
            <p class="font-semibold">Błąd</p>
            <p class="text-sm">{tokenError}</p>
            <p class="text-sm mt-2">
              <a href="/auth/forgot-password" class="underline">
                Wyślij nowy link resetowania hasła
              </a>
            </p>
          </div>
        </div>
      ) : (
        <ResetPasswordForm client:load />
      )
    }
  </main>
</Layout>
