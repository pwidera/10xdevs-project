name: Test & Build master

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:


jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:cov

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

# opcjonalne - brak zalozonej testowej bazy w supabase cloud
#  e2e-test:
#    name: E2E Tests
#    runs-on: ubuntu-latest
#    needs: lint
#    environment: integration
#    env:
#      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
#      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
#      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
#      APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
#      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version-file: '.nvmrc'
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Install Playwright browsers
#        run: npx playwright install chromium --with-deps
#
#      - name: Build application
#        run: npm run build
#
#      - name: Run E2E tests
#        run: npm run test:e2e
#
#      - name: Upload E2E test results
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: e2e-test-results
#          path: playwright-report/
#          retention-days: 7
#
#      - name: Upload E2E test coverage
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: e2e-test-coverage
#          path: coverage-e2e/
#          retention-days: 7

  status-comment:
    name: Post Status Comment
    runs-on: ubuntu-latest
    needs: [lint, build, unit-test]
    if: always() && needs.lint.result == 'success' && needs.unit-test.result == 'success'
    permissions:
      pull-requests: write
    steps:
      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/

#      - name: Download E2E test coverage
#        uses: actions/download-artifact@v4
#        with:
#          name: e2e-test-coverage
#          path: coverage-e2e/

      - name: Post success comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## âœ… Pull Request CI - All Checks Passed

            ### Test Results
            - âœ… **Linting**: Passed
            - âœ… **Unit Tests**: Passed
#            - âœ… **E2E Tests**: Passed

            All quality checks have passed successfully! ðŸŽ‰

            ---
            *Workflow run: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
